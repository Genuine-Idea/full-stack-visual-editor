{"version":3,"sources":["Editor/Editor.js","Editor/consts.js","Editor/commands/index.js","Editor/commands/openImport.js","Editor/panels/index.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","React","forwardRef","props","ref","onInit","id","blockManager","styleManager","storageManager","width","height","propPlugins","plugins","presetType","children","onDestroy","useState","editor","setEditor","useEffect","GrapesJS","init","container","fromElement","editors","filter","e","destroy","document","getElementById","innerHTML","useImperativeHandle","defaultProps","blocks","components","window","cmdImport","cmdDeviceDesktop","cmdDeviceTablet","cmdDeviceMobilePortrait","cmdDeviceMobileLandscape","cmdClear","CommandInit","config","cm","Commands","txtConfirm","textCleanCanvas","add","pfx","getConfig","modal","Modal","codeViewer","CodeManager","getViewer","clone","createElement","importLabel","modalImportLabel","importCnt","modalImportContent","viewerEditor","btnImp","type","modalImportButton","className","onclick","_","setComponents","getValue","trim","close","set","codeName","theme","readOnly","importViewerOptions","run","txtarea","labelEl","appendChild","setTitle","modalImportTitle","setContent","cnt","open","getModel","once","stopCommand","refresh","stop","openImport","setDevice","confirm","runCommand","PanelInit","pn","Panels","eConfig","swv","expt","osm","otm","ola","obl","ful","prv","showDevices","getPanels","reset","buttons","command","context","active","openBl","getButton","on","showStylesOnChange","openSmBtn","openLayersBtn","get","getSelected","editorInit","commands","getHtml","getCss","panels","App","grapesjs_plugin_export","grapesjs_blocks_basic","grapesjs_plugin_forms","grapesjs_navbar","grapesjs_style_gradient","grapesjs_typed","grapesjs_style_bg","grapesjs_tabs","grapesjs_custom_code","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a6b88d27.chunk.js","sourcesContent":["import GrapesJS from 'grapesjs';\nimport React from 'react';\n\nconst Editor = React.forwardRef(\n    (props, ref) => {\n        const {\n            onInit,\n            id,\n            blockManager,\n            styleManager,\n            storageManager,\n            width,\n            height,\n            plugins: propPlugins,\n            presetType,\n            children,\n            onDestroy,\n        } = props;\n\n        const [editor, setEditor] = React.useState(null);\n\n        React.useEffect(\n            () => {\n                const editor = GrapesJS.init({\n                    container: `#${id}`,\n                    fromElement: true,\n                    blockManager,\n                    styleManager,\n                    storageManager,\n                    width,\n                    height,\n                    plugins: [...propPlugins],\n                });\n                if (typeof onInit === 'function') {\n                    onInit(editor);\n                }\n                setEditor(editor);\n\n                return function cleanup() {\n                    if (editor) {\n                        if (typeof onDestroy === 'function') {\n                            onDestroy(editor);\n                        }\n                        GrapesJS.editors = GrapesJS.editors.filter((e) => e !== editor);\n                        editor.destroy();\n                        if (document) {\n                            const container = document.getElementById(id);\n                            if (container) {\n                                container.innerHTML = '';\n                            }\n                        }\n                    }\n                };\n            },\n            [blockManager, height, id, onDestroy, onInit, presetType, propPlugins, storageManager, styleManager, width],\n        );\n\n        React.useImperativeHandle(ref, () => {\n            return editor;\n        });\n\n        return (\n            <div id={id}>\n                {children}\n            </div>\n        );\n    },\n);\n\nEditor.defaultProps = {\n    id: 'gjs',\n    presetType: 'newsletter',\n    plugins: [],\n    blocks: [],\n    blockManager: {},\n    storageManager: {},\n    styleManager: {},\n    width: 'auto',\n    height: '100vh',\n    components: [],\n};\n\nexport default Editor;\n// Allows for usage as if it was loaded via script\nwindow.GrapesJS = GrapesJS;\n","export const\n    cmdImport = 'gjs-open-import-webpage',\n    cmdDeviceDesktop = 'set-device-desktop',\n    cmdDeviceTablet = 'set-device-tablet',\n    cmdDeviceMobilePortrait = 'set-device-mobile-portrait',\n    cmdDeviceMobileLandscape = 'set-device-mobile-landscape',\n    cmdClear = 'canvas-clear';\n","import openImport from './openImport';\nimport {\n    cmdImport,\n    cmdDeviceDesktop,\n    cmdDeviceTablet,\n    cmdDeviceMobilePortrait,\n    cmdDeviceMobileLandscape,\n    cmdClear\n} from '../consts';\n\nconst CommandInit = (editor, config) => {\n    const cm = editor.Commands;\n    const txtConfirm = config.textCleanCanvas;\n\n    cm.add(cmdImport, openImport(editor, config));\n    cm.add(cmdDeviceDesktop, e => e.setDevice('Desktop'));\n    cm.add(cmdDeviceTablet, e => e.setDevice('Tablet'));\n    cm.add(cmdDeviceMobilePortrait, e => e.setDevice('Mobile portrait'));\n    cm.add(cmdDeviceMobileLandscape, e => e.setDevice('Mobile landscape'));\n    cm.add(cmdClear, e => window.confirm(txtConfirm) && e.runCommand('core:canvas-clear'));\n}\n\nexport default CommandInit;\n","// From https://github.com/artf/grapesjs-preset-webpage/blob/master/src/commands/openImport.js\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (editor, config) => {\n    const pfx = editor.getConfig('stylePrefix');\n    const modal = editor.Modal;\n    const codeViewer = editor.CodeManager.getViewer('CodeMirror').clone();\n    const container = document.createElement('div');\n    const importLabel = config.modalImportLabel;\n    const importCnt = config.modalImportContent;\n    let viewerEditor = codeViewer.editor;\n\n    // Init import button\n    const btnImp = document.createElement('button');\n    btnImp.type = 'button';\n    btnImp.innerHTML = config.modalImportButton;\n    btnImp.className = `${pfx}btn-prim ${pfx}btn-import`;\n    btnImp.onclick = _ => {\n        editor.setComponents(viewerEditor.getValue().trim());\n        modal.close();\n    };\n\n    // Init code viewer\n    codeViewer.set({ ...{\n            codeName: 'htmlmixed',\n            theme: 'hopscotch',\n            readOnly: 0\n        }, ...config.importViewerOptions});\n\n    return {\n        run(editor) {\n            if (!viewerEditor) {\n                const txtarea = document.createElement('textarea');\n\n                if (importLabel) {\n                    const labelEl = document.createElement('div');\n                    labelEl.className = `${pfx}import-label`;\n                    labelEl.innerHTML = importLabel;\n                    container.appendChild(labelEl);\n                }\n\n                container.appendChild(txtarea);\n                container.appendChild(btnImp);\n                codeViewer.init(txtarea);\n                viewerEditor = codeViewer.editor;\n            }\n\n            modal.setTitle(config.modalImportTitle);\n            modal.setContent(container);\n            const cnt = typeof importCnt == 'function' ? importCnt(editor) : importCnt;\n            codeViewer.setContent(cnt || '');\n            modal.open().getModel()\n                .once('change:open', () => editor.stopCommand(this.id));\n            viewerEditor.refresh();\n        },\n\n        stop() {\n            modal.close();\n        }\n    }\n}\n","import {\n    cmdImport,\n    cmdDeviceDesktop,\n    cmdDeviceTablet,\n    cmdDeviceMobilePortrait,\n    cmdDeviceMobileLandscape,\n    cmdClear\n} from '../consts';\n\nconst PanelInit = (editor, config) => {\n    const pn = editor.Panels;\n    const eConfig = editor.getConfig();\n    const swv = 'sw-visibility',\n        expt = 'export-template',\n        osm = 'open-sm',\n        otm = 'open-tm',\n        ola = 'open-layers',\n        obl = 'open-blocks',\n        ful = 'fullscreen',\n        prv = 'preview';\n\n    eConfig.showDevices = 0;\n\n    pn.getPanels().reset([{\n        id: 'commands',\n        buttons: [{}],\n    },{\n        id: 'options',\n        buttons: [{\n            id: swv,\n            command: swv,\n            context: swv,\n            className: 'fa fa-square-o',\n            active: true,\n        },{\n            id: prv,\n            context: prv,\n            command: e => e.runCommand(prv),\n            className: 'fa fa-eye',\n        },{\n            id: ful,\n            command: ful,\n            context: ful,\n            className: 'fa fa-arrows-alt',\n        },{\n            id: expt,\n            className: 'fa fa-code',\n            command: e => e.runCommand(expt),\n        },{\n            id: 'undo',\n            className: 'fa fa-undo',\n            command: e => e.runCommand('core:undo'),\n        },{\n            id: 'redo',\n            className: 'fa fa-repeat',\n            command: e => e.runCommand('core:redo'),\n        },{\n            id: cmdImport,\n            className: 'fa fa-download',\n            command: e => e.runCommand(cmdImport),\n        },{\n            id: cmdClear,\n            className: 'fa fa-trash',\n            command: e => e.runCommand(cmdClear),\n        }],\n    },{\n        id: 'views',\n        buttons  : [{\n            id: osm,\n            command: osm,\n            active: true,\n            className: 'fa fa-paint-brush',\n        },{\n            id: otm,\n            command: otm,\n            className: 'fa fa-cog',\n        },{\n            id: ola,\n            command: ola,\n            className: 'fa fa-bars',\n        },{\n            id: obl,\n            command: obl,\n            className: 'fa fa-th-large',\n        }],\n    },{\n        id: 'devices-c',\n        buttons: [{\n            id: cmdDeviceDesktop,\n            command: cmdDeviceDesktop,\n            className: 'fa fa-desktop',\n            active: 1,\n        },{\n            id: cmdDeviceTablet,\n            command: cmdDeviceTablet,\n            className: 'fa fa-tablet',\n        },{\n            id: cmdDeviceMobilePortrait,\n            command: cmdDeviceMobilePortrait,\n            className: 'fa fa-mobile',\n        },{\n            id: cmdDeviceMobileLandscape,\n            command: cmdDeviceMobileLandscape,\n            className: 'fa fa-mobile fa-rotate-90',\n        }]\n    }]);\n\n    const openBl = pn.getButton('views', obl);\n    editor.on('load', () => openBl && openBl.set('active', 1));\n\n    // On component change show the Style Manager\n    config.showStylesOnChange && editor.on('component:selected', () => {\n        const openSmBtn = pn.getButton('views', osm);\n        const openLayersBtn = pn.getButton('views', ola);\n\n        // Don't switch when the Layer Manager is on or\n        // there is no selected component\n        if ((!openLayersBtn || !openLayersBtn.get('active')) && editor.getSelected()) {\n            openSmBtn && openSmBtn.set('active', 1);\n        }\n    });\n}\n\nexport default PanelInit;","import \"./App.scss\"\n\nimport grapesjs_plugin_export from 'grapesjs-plugin-export';\nimport grapesjs_blocks_basic from \"grapesjs-blocks-basic\";\nimport grapesjs_plugin_forms from \"grapesjs-plugin-forms\";\nimport grapesjs_navbar from \"grapesjs-navbar\";\nimport grapesjs_style_gradient from \"grapesjs-style-gradient\";\nimport grapesjs_typed from \"grapesjs-typed\";\nimport grapesjs_style_bg from \"grapesjs-style-bg\";\nimport grapesjs_tabs from \"grapesjs-tabs\";\nimport grapesjs_custom_code from \"grapesjs-custom-code\";\n\nimport Editor from \"./Editor/Editor\";\nimport commands from \"./Editor/commands\"\nimport panels from \"./Editor/panels\"\n\nfunction editorInit(editor) {\n    commands(editor, {\n        modalImportTitle: \"Import\",\n        modalImportLabel: '<div style=\"margin-bottom: 10px; font-size: 13px;\">' +\n            'Paste here your HTML/CSS and click Import</div>',\n        modalImportButton: \"Import\",\n        modalImportContent: editor => `${editor.getHtml()}<style>\\n${editor.getCss()}</style>`\n    });\n    panels(editor, {});\n}\n\nfunction App() {\n  // TODO Add a storageManager for remote (from Getting Started in docs)\n  return (\n      <Editor id=\"gjs\" width=\"100vw\" height=\"100vh\" plugins={[\n        grapesjs_plugin_export,\n        grapesjs_blocks_basic,\n        grapesjs_plugin_forms,\n        grapesjs_navbar,\n        grapesjs_style_gradient,\n        grapesjs_typed,\n        grapesjs_style_bg,\n        grapesjs_tabs,\n        grapesjs_custom_code\n      ]} onInit={editorInit} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}